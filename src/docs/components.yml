components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        about:
          type: string
        wallet_address:
          type: string
        profile_pic:
          type: string
        role:
          type: string
          enum: [USER, ADMIN]
      example:
        id: 5ebac534954b54139806c112
        username: TradeShark45
        about: Professional Trader
        wallet_address: 0xwtfisthisaddress
        profile_pic: https://bloburl.com
        role: USER
    
    Event:
      type: object 
      properties:
        id:
          type: number
        unique_id:
          type: string
        title:
          type: string
        expiry_date:
          type: string
          format: date
        userId:
          type: number
        community:
          type: array
          items:
            type: string
        status:
          type: boolean
          enum: [ACTIVE, EXPIRED, CLOSED]
        createdAt:
          type: date
        updatedAt:
          type: date
          # enum: [USER, ADMIN]
      example:
        id: 1
        unique_id: uidstr
        title: Will Kamla Haris win ?
        status: ACTIVE
        createdAt: 2023-10-26T15:30:00Z
        updatedAt: 2023-10-26T15:30:00Z

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
