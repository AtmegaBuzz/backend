components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        about:
          type: string
        wallet_address:
          type: string
        profile_pic:
          type: string
        role:
          type: string
          enum: [USER, ADMIN]
      example:
        id: 5ebac534954b54139806c112
        username: TradeShark45
        about: Professional Trader
        wallet_address: 0xwtfisthisaddress
        profile_pic: https://bloburl.com
        role: USER
    
    Event:
      type: object 
      properties:
        id:
          type: number
        unique_id:
          type: string
        question:
          type: string
        option_a:
          type: string
        option_b:
          type: string
        resolution_criteria:
          type: string
        image:
          type: string
        expiry_date:
          type: string
          format: date
        userId:
          type: number
        community:
          type: array
          items:
            type: string
        status:
          type: boolean
          enum: [ACTIVE, EXPIRED, CLOSED]
        createdAt:
          type: date
        updatedAt:
          type: date
          # enum: [USER, ADMIN]
      example:
        id: 1
        unique_id: uidstr
        question: Will Kamla Haris win ?
        option_a: Will Win
        option_b: Will Loose
        resolution_criteria: Resolution will be based on US election results
        image: https://linktoimageblob
        expiry_date: 2023-10-26T15:30:00Z
        community: ['elections', 'kamla', 'USA']
        status: ACTIVE
        createdAt: 2023-10-26T15:30:00Z
        updatedAt: 2023-10-26T15:30:00Z

    Thread:
      type: object 
      properties:
        id:
          type: number
        unique_id:
          type: string
        message:
          type: string
        image:
          type: string
        createdAt:
          type: date
      example:
        id: 1
        unique_id: uidstr
        message: I am on Kamlas side
        image: https://linktoimageblob
        createdAt: 2023-10-26T15:30:00Z
        updatedAt: 2023-10-26T15:30:00Z

    Blob:
      type: object 
      properties:
        success:
          type: boolean
        url:
          type: string
        message:
          type: string
        error:
          type: string
        blobName:
          type: string
      example:
        success: true
        url: https://bangostorageaccount.blob.core.windows.net/threads/1730372857266-b8d67aef-02b4-41b1-8424-c20e76fb52c0.png?sv=2022-11-02&ss=bfqt&srt=o&sp=rwdlacupiytfx&se=2024-10-31T18:23:54Z&st=2024-10-31T10:23:54Z&spr=https&sig=QCkZaxALBnS5WGjSdSaysvFnIS1%2B6AlGn5ZlTx1UjMg%3D
        blobName: 1730372857266-b8d67aef-02b4-41b1-8424-c20e76fb52c0.png
        message: ""
        error: ""

        

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal Server Error
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
